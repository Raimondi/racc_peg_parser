# vim:set ft=ruby:
class Peg::Parser

prechigh
  right definition
preclow
rule

grammar     : definitions END
definitions : definition
            | definitions definition
definition  : IDENTIFIER leftarrow expression
expression  : sequence
            | expression alternative
alternative : slash sequence
sequence    : # Empty
            | sequence prefix suffix
            | sequence suffix
prefix      : and
            | not
suffix      : primary quantifier
            | primary
quantifier  : question
            | star
            | plus
primary     : identifier
            | open expression close
            | literal
            | class
            | dot
# lexical syntax
identifier : IDENTIFIER eol
class      : CLASS eol
literal    : SQSTRING eol
           | DQSTRING eol
leftarrow  : LEFTARROW  eol
slash      : SLASH eol
and        : AND eol
not        : NOT eol
question   : QUESTION eol
star       : STAR eol
plus       : PLUS eol
open       : OPEN eol
close      : CLOSE eol
dot        : DOT eol
eol        : # Empty
           | eol EOL
end

---- inner ----
  @yydebug=true
  def parse(tokens)
    @yydebug = true
    @tokens = tokens
    do_parse
  end

  #def on_error( *args )
  #  $stderr.puts "on_error called: args=#{args.inspect}"
  #end

  def next_token
    token = @tokens.shift
    #puts "Token: #{token.inspect}"
    token
  end

